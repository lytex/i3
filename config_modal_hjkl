# Modified from https://github.com/guillaumecherel/i3-modal
#
# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

# Startup applications

# exec --no-startup-id nm-applet
# exec --no-startup-id redshift-gtk
# exec --no-startup-id udiskie --tray
# exec --no-startup-id emacs --daemon
# Not really needed, except for xdotool:
# exec --no-startup-id setxkbmap fr bepo

# Applications
# set $terminal /home/guillaume/.local/bin/st -e tmux
# set $editor /usr/bin/emacsclient -c
# set $web /home/guillaume/.local/bin/firefox
# set $email /home/guillaume/.local/bin/astroid
# set $shell /usr/bin/fish
# set $rofi /usr/bin/rofi

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango:monospace 8
font pango:Fantasque Sans Mono 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesnâ€™t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier Mod4


#### Modes ####
#
# Super gets you to "mode switch" mode from anywhere. 
# Returns execute the current mode "natural" action and returns to default mode.
# Space move to the current mode's natural alternate mode, that is a mode one may naturally switch to from this mode. For example, in the navigate mode, spaces switches to the move container mode and vice versa.
# Escape goes to default mode.

bindsym Super_L mode "$mode_switch"
bindsym Super_R mode "$mode_switch"
# bindsym $mod+space mode "$mode_switch"
set $mode_switch Mode [space] launcher, [j]ump, [hjklpP<arrow><workspace>] navigate, [m]ove container, [l]ayout, move [w]orkspace, [r]esize container, [i]3 special
mode "$mode_switch" {
    bindsym Escape mode "default"

    bindsym Super_L nop
    bindsym Super_R nop

    bindsym return mode "default"

    bindsym space mode "$mode_launcher"

    bindsym j exec $rofi -location 2 -width 100 -show window; mode default

    bindsym h focus left; mode "$mode_navigate"
    bindsym j focus down; mode "$mode_navigate"
    bindsym k focus up; mode "$mode_navigate"
    bindsym l focus right; mode "$mode_navigate"
    bindsym Left focus left; mode "$mode_navigate"
    bindsym Down focus down; mode "$mode_navigate"
    bindsym Up focus up; mode "$mode_navigate"
    bindsym light focus right; mode "$mode_navigate"
    bindsym p focus parent
    bindsym Shift+p focus child
    bindsym exclam workspace 1; mode "$mode_navigate"
    bindsym at workspace 2; mode "$mode_navigate"
    bindsym numbersign workspace 3; mode "$mode_navigate"
    bindsym dollar workspace 4; mode "$mode_navigate"
    bindsym percent workspace 5; mode "$mode_navigate"
    bindsym asciicircum workspace 6; mode "$mode_navigate"
    bindsym ampersand workspace 7; mode "$mode_navigate"
    bindsym asterisk workspace 8; mode "$mode_navigate"
    bindsym parenleft workspace 9; mode "$mode_navigate"
    bindsym parenright workspace 10; mode "$mode_navigate"

    bindsym m mode "$mode_move_container"
    bindsym l mode "$mode_layout"
    bindsym w mode "$mode_move_workspace"
    bindsym r mode "$mode_window_resize"
    bindsym i mode "$mode_i3_special"
}

set $mode_launcher Launch application [Return] terminal, [e]ditor, [w]eb, e[mail], [r]un command, [p]aste command output
mode "$mode_launcher" {
    bindsym Escape mode "default"

    bindsym Super_L mode "$mode_switch"
    bindsym Super_R mode "$mode_switch"

    bindsym return exec "$terminal" ; mode "default"

    bindsym space mode "default"

    # start other frequent applications
    bindsym w exec "$web"; mode "default"
    bindsym m exec "$email"; mode "default" 
    bindsym e exec "$editor"; mode "default"

    # start space (a program launcher) and switch to insert mode if any item was selected and run them
    bindsym l exec $rofi -location 2 -width 100 -show run; mode default

    # go to paste mode
    bindsym p mode "$mode_paste"
}

set $mode_paste Paste [Return] command output, [e]mail, [p]assword 
mode "$mode_paste" {
    bindsym Escape mode "default"

    bindsym Super_L mode "$mode_switch"
    bindsym Super_R mode "$mode_switch"

    bindsym return mode default; exec $rofi -location 2 -width 100 -show run -run-command '/bin/sh -c \\"echo -n `{cmd}` | xdotool type --clearmodifiers --delay 0 --file -\\"'

    bindsym space mode "$mode_launcher"

    # paste password
    bindsym p mode default; exec $shell -c "rofi_pass -location 2 -width 100 | xdotool_type_input"

    # paste email addresses
    bindsym e mode default; exec $shell -c "rofi_email -location 2 -width 100 | xdotool_type_input"

    # paste command output and switch to insert mode if any output was received
}

set $mode_i3_special reload [c]onfiguration, [r]estart, e[x]it
mode "$mode_i3_special" {
    bindsym Escape mode "default"

    bindsym Super_L mode "$mode_switch"
    bindsym Super_R mode "$mode_switch"

    bindsym return mode "default"

    bindsym space mode "$mode_switch"

    # reload the configuration file
    bindsym h reload
    # restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
    bindsym l restart
    
    # exit i3 (logs you out of your X session)
    bindsym x exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"
}

set $mode_navigate Navigate [ctsr] or [<arrow>] move focus, [<workspace>] switch to workspace, [Shift+space] focus floating/tiling, [p] focus parent, [Shift+p] focus child, [space] move container, [l] layout
mode "$mode_navigate" {
    bindsym Escape mode "default"

    bindsym Super_L mode "$mode_switch"
    bindsym Super_R mode "$mode_switch"

    bindsym return mode "default"

    bindsym space mode "$mode_move_container"
  
    # change focus
    bindsym h focus left
    bindsym j focus down
    bindsym k focus up
    bindsym l focus right

    # alternatively, you can use the cursor keys:
    bindsym Left focus left
    bindsym Down focus down
    bindsym Up focus up
    bindsym light focus right

    # switch to workspace
    bindsym exclam workspace 1
    bindsym at workspace 2
    bindsym numbersign workspace 3
    bindsym dollar workspace 4
    bindsym percent workspace 5
    bindsym asciicircum workspace 6
    bindsym ampersand workspace 7
    bindsym asterisk workspace 8
    bindsym parenleft workspace 9
    bindsym parenright workspace 10

    # change focus between tiling / floating windows
    bindsym Shift+space focus mode_toggle

    # focus the parent container
    bindsym p focus parent

    # focus the child container
    bindsym Shift+p focus child

    # switch to layout mode
    bindsym l mode "$mode_layout"
}

set $mode_move_container Move container [ctsr] or [<arrows>], [<workspace>] to workspace, [Shift+ctsr] to outputs, [Shift+K]ill container, [Shift+space] toggle floating/tiling, [space] navigate
mode "$mode_move_container" {
    bindsym Escape mode "default"

    bindsym Super_L mode "$mode_switch"
    bindsym Super_R mode "$mode_switch"

    bindsym return mode "default"

    bindsym space mode "$mode_navigate"

    # move focused window
    bindsym h move left
    bindsym j move down
    bindsym k move up
    bindsym l move right

    # alternatively, you can use the cursor keys:
    bindsym Left move left
    bindsym Down move down
    bindsym Up move up
    bindsym light move right

    # move focused container to workspace
    bindsym exclam move container to workspace 1
    bindsym at move container to workspace 2
    bindsym numbersign move container to workspace 3
    bindsym dollar move container to workspace 4
    bindsym percent move container to workspace 5
    bindsym asciicircum move container to workspace 6
    bindsym ampersand move container to workspace 7
    bindsym asterisk move container to workspace 8
    bindsym parenleft move container to workspace 9
    bindsym parenright move container to workspace 10

    # move container to outputs
    bindsym Shift+c move container to output right
    bindsym Shift+t move container to output left
    bindsym Shift+s move container to output up
    bindsym Shift+r move container to output down

    # kill focused window
    bindsym k kill

    # toggle tiling / floating
    bindsym Shift+space floating toggle
}

set $mode_layout Layout split [h]orizontally, [v]ertically, [f]ullscreen, [s]tacking, [t]abbed, toggle s[p]lit, [Shift+space] toggle floating/tiling, [space] navigate
mode "$mode_layout" {
    bindsym Escape mode "default"

    bindsym Super_L mode "$mode_switch"
    bindsym Super_R mode "$mode_switch"

    bindsym return mode "default"

    bindsym space mode "$mode_navigate"

    # split in horizontal orientation
    bindsym h split h

    # split in vertical orientation
    bindsym v split v

    # enter fullscreen mode for the focused container
    bindsym f fullscreen toggle

    # change container layout (stacked, tabbed, toggle split)
    bindsym k layout stacking
    bindsym j layout tabbed
    bindsym p layout toggle split

    # toggle tiling / floating
    bindsym Shift+space floating toggle
}

set $mode_move_workspace Get workspace from [<workspace>] or move to output [ctsr], [space] navigate
mode "$mode_move_workspace" {
    bindsym Escape mode "default"

    bindsym Super_L mode "$mode_switch"
    bindsym Super_R mode "$mode_switch"

    bindsym return mode "default"

    bindsym space mode "$mode_navigate"

    # move whole workspace to outputs
    bindsym h move workspace to output right
    bindsym j move workspace to output left
    bindsym k move workspace to output up
    bindsym l move workspace to output down

    # get workspace to current output
    bindsym exclam [workspace="1"] move workspace to output current
    bindsym at [workspace="2"] move workspace to output current
    bindsym numbersign [workspace="3"] move workspace to output current
    bindsym dollar [workspace="4"] move workspace to output current
    bindsym percent [workspace="5"] move workspace to output current
    bindsym asciicircum [workspace="6"] move workspace to output current
    bindsym ampersand [workspace="7"] move workspace to output current
    bindsym asterisk [workspace="8"] move workspace to output current
    bindsym parenleft [workspace="9"] move workspace to output current
    bindsym parenright [workspace="10"] move workspace to output current
}

set $mode_window_resize Resize with [ctsr], [space] navigate
mode "$mode_window_resize" {
    bindsym Escape mode "default"

    bindsym Super_L mode "$mode_switch"
    bindsym Super_R mode "$mode_switch"

    bindsym return mode "default"

    bindsym space mode "$mode_navigate"

    # Pressing left will shrink the windowâ€™s width.
    # Pressing right will grow the windowâ€™s width.
    # Pressing up will shrink the windowâ€™s height.
    # Pressing down will grow the windowâ€™s height.
    bindsym h resize shrink width 10 px or 10 ppt
    bindsym j resize grow height 10 px or 10 ppt
    bindsym k resize shrink height 10 px or 10 ppt
    bindsym l resize grow width 10 px or 10 ppt

    # same bindings, but for the arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym light resize grow width 10 px or 10 ppt
}

# Start i3bar to display a workspace bar (ampersand the system information i3status

# finds out, if available)
bar {
        status_command i3status
}
